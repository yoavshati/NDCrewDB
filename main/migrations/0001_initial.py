# Generated by Django 3.2.3 on 2021-06-14 07:27

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=8, unique=True, validators=[django.core.validators.RegexValidator(regex='s\\d{7}')])),
                ('password', models.CharField(default='aA12345678', max_length=200)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_description', models.CharField(max_length=50, verbose_name='תיאור פריט')),
                ('manufacturer_id', models.CharField(max_length=50, verbose_name='מספר יצרן')),
                ('test_method', models.IntegerField(choices=[(1, 'בדיקת ראיה'), (2, 'בדיקת הקשה'), (3, 'זרמי ערבולת'), (4, 'נוזלים חודרים'), (5, 'חלקיקים מגנטיים'), (6, 'אולטרסאונד'), (7, 'רדיוגרפיה'), (8, 'תרמוגרפיה'), (9, 'שירוגרפיה'), (10, 'אחר')], verbose_name='שיטת בדיקה')),
                ('literature_code', models.CharField(max_length=50, verbose_name='שיוך לספרות טכנית')),
                ('testing_hours', models.FloatField(verbose_name='שעתון בדיקה')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.IntegerField(choices=[(1, 'כנף 1'), (2, 'כנף 4'), (3, 'בח"א 8'), (4, 'כנף 25'), (5, 'בח"א 28'), (6, 'בח"א 30'), (7, 'מחלקת שפיצים'), (8, 'מחלקת מנועים'), (9, 'מחלקת הנדסה')], verbose_name='שיוך ארגוני')),
                ('test_location', models.IntegerField(choices=[(1, 'מעבדה'), (2, 'גף תחזוקה'), (3, 'דת"ק/מוסך'), (4, 'אחר')], verbose_name='מקום הבדיקה')),
                ('test_date', models.DateField(default=django.utils.timezone.now, verbose_name='תאריך הבדיקה')),
                ('test_time_start', models.TimeField(verbose_name='שעת התחלה')),
                ('test_time_end', models.TimeField(verbose_name='שעת סיום')),
                ('aircraft', models.CharField(max_length=50, verbose_name='כלי טייס/מכלול')),
                ('aircraft_id', models.CharField(max_length=50, verbose_name="מס' זנב/סידורי")),
                ('measurement_device_id', models.CharField(blank=True, max_length=16, verbose_name="מס' סידורי של מכשיר הבדיקה")),
                ('findings', models.IntegerField(choices=[(1, 'שמיש'), (2, 'סדוק'), (3, 'אחר'), (4, 'ראה הערות'), (5, 'נדרשת בדיקה נוספת')], verbose_name='ממצאים')),
                ('notes', models.CharField(blank=True, max_length=50, verbose_name='הערות')),
                ('checker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='checker', related_query_name='checker', to=settings.AUTH_USER_MODEL, verbose_name='בודק')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tester', related_query_name='tester', to=settings.AUTH_USER_MODEL, verbose_name='מבצע')),
            ],
        ),
        migrations.CreateModel(
            name='TestItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_description', models.CharField(max_length=50, verbose_name='תיאור פריט')),
                ('number_of_parts', models.IntegerField(verbose_name='מספר פריטים')),
                ('item_id', models.CharField(blank=True, max_length=50, verbose_name='מספר סידורי')),
                ('tag_number', models.CharField(blank=True, max_length=50, verbose_name='מספר תג תהליך')),
                ('manufacturer_id', models.CharField(max_length=50, verbose_name='מספר יצרן')),
                ('test_method', models.IntegerField(choices=[(1, 'בדיקת ראיה'), (2, 'בדיקת הקשה'), (3, 'זרמי ערבולת'), (4, 'נוזלים חודרים'), (5, 'חלקיקים מגנטיים'), (6, 'אולטרסאונד'), (7, 'רדיוגרפיה'), (8, 'תרמוגרפיה'), (9, 'שירוגרפיה'), (10, 'אחר')], verbose_name='שיטת בדיקה')),
                ('literature_code', models.CharField(max_length=50, verbose_name='שיוך לספרות טכנית')),
                ('testing_hours', models.FloatField(verbose_name='שעתון בדיקה')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='main.test')),
            ],
        ),
    ]
